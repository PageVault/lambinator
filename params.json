{"name":"Lambinator","tagline":"A set of command line tools for managing AWS Lambda functions","body":"#Who\r\n\r\n\r\n#What\r\n\r\nlamb·i·nat·or\r\n\r\n_n._\r\n\r\n1. A set of command line tools for managing AWS Lambda functions\r\n2. _future_ registry of pre-built functions for deploying to AWS Lambda\r\n\r\n#Why\r\n\r\nThere are several projects emerging in this space, but none quite met our needs:\r\n\r\n- Ability to test locally with external binaries available locally in your PATH, but deployed to AWS Lambda with Linux-compiled versions\r\n- Ability to manage several functions in a single repository\r\n- Desire to create a growing registry of canned functions that you can install, modify and deploy for your own use\r\n\r\nLambinator currently handles the first two scenarios, and will eventually handle all 3.\r\n\r\n#How\r\n\r\n##Installation\r\n\r\n`npm install lambinator`\r\n\r\n##Basic Usage\r\n`lamb init` -- initialize a directory with lambinator assets (.env, lambinator.json)\r\n`lamb run my-function-name` -- run a function locally \r\n`lamb deploy my-function-name --env development` -- deploy a function to AWS Lambda\r\n`lamb get registered-function-name` -- download a function from registry for editing\r\n\r\n##Detailed Usage\r\nDetails to come!","google":"UA-72315632-1","note":"Don't delete this file! It's used internally to help with page regeneration."}